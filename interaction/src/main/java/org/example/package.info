此包为用户交互层，用于对内部系统进行交互
facade防腐层，不做任何业务处理,只是对领域服务的组装,在业务简单时，facade可以省略掉,调用链如下两种：
1. controller -> application.command -> 领域服务 —> 数据库、异步事件同步到其他系统
2. controller -> application.query -> 数据表
这里包含前三个处理,主要处理用户交互参数

DDD架构的层与层的关系是十分弱的，各个层级应当是平行的，除了门面防腐层，其他应该依赖接口而非实现;

application为应用层，体现为cmd处理，封装领域服务
query为查询服务，简单查询可以直接查询DAO层，复杂查询业务则通过领域层完成业务逻辑;
view为视图层，视图层用于VO字段与DTO不一致时,当相同时，亦可省略视图层;

类的转换: 随着代码的增加, 有各种VO,DTO,DO的转换，这里将转换代码放在实体类中，用from方法表示。比如
一个DTO需要转换为VO,则应该在VO中添加一个from方法，建议通过BeanUtil完成相同属性以避免过多的set
